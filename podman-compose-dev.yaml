# Podman Traefik Fullstack Baseline
# Copyright (c) 2025 [XCS HornetGit]
# Licensed under MIT License
version: "3.8"

# ##################################################################
# NOTE: if traefik disabled, pls add the ports section to :
# front and backend services
# ##################################################################

services:

  # TRAEFIK SERVICE, self-cert (autogenerated)
  traefik:
    image: "traefik:v2.11"
    container_name: miniapp_traefik
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    ports:
      - "${MINIAPP_TRAEFIK_HTTP_PORT}:8080"       # 8080:8080
      - "${MINIAPP_TRAEFIK_HTTPS_PORT}:8443"      # 8443:8443
      - "${MINIAPP_TRAEFIK_DASHBOARD_PORT}:8081"  # 8081:8081
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./traefik/certs:/etc/traefik/certs:ro  # âœ… Mount certificates
      - ./traefik/acme.json:/etc/traefik/acme/acme.json
      - /run/user/1001/podman/podman.sock:/var/run/docker.sock:ro
    networks:
      - miniapp_public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localtest.me`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.dashboard-secure.rule=Host(`traefik.localtest.me`)"
      - "traefik.http.routers.dashboard-secure.entrypoints=websecure"
      - "traefik.http.routers.dashboard-secure.tls=true"
      - "traefik.http.routers.dashboard-secure.service=api@internal"

  # TRAEFIK SERVICE, self-cert (autogenerated)
  postgres:
    build:
      context: ./db
      dockerfile: Dockerfile
      image: custom-postgres:${MINIAPP_SW_VERSION_TAG}

    restart: always
    container_name: ${MINIAPP_DB_CONTAINER_NAME}
    env_file:
      - .env.dev
    environment:
      POSTGRES_DB: ${MINIAPP_DB_NAME}
      POSTGRES_USER: ${MINIAPP_DB_USER}
      POSTGRES_PASSWORD: ${MINIAPP_DB_PASSWORD}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${MINIAPP_DB_PORT}:${MINIAPP_DB_PORT}"
    networks:
      - ${NETWORK_PRIVATE_NAME}

  frontend:
    image: "nginx:${MINIAPP_SW_VERSION_TAG}"
    # image: "nginx:alpine"  # Use alpine for smaller size
    env_file:
      - .env.dev
    container_name: ${MINIAPP_FRONTEND_CONTAINER_NAME}
    restart: always
    depends_on:
      - backend
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    #ports: comment out this section when traefik is enabled
    #  - "${MINIAPP_FRONTEND_PORT}:80"
    networks:
      - ${NETWORK_PUBLIC_NAME}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localtest.me`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.docker.network=miniapp_public"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.frontend-http.rule=Host(`localtest.me`)"
      - "traefik.http.routers.frontend-http.entrypoints=web"
      # Middlewares
      - "traefik.http.routers.frontend-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
      image: "miniapp-backend:${MINIAPP_SW_VERSION_TAG}"
    container_name: ${MINIAPP_BACKEND_CONTAINER_NAME}
    restart: always
    depends_on:
      - postgres
    environment:
      POSTGRES_DB: ${MINIAPP_DB_NAME}
      POSTGRES_USER: ${MINIAPP_DB_USER}
      POSTGRES_PASSWORD: ${MINIAPP_DB_PASSWORD}
    # ports: comment this section if traefik enabled (no direct port exposure, use traefik)
    #  - "${MINIAPP_BACKEND_PORT}:${MINIAPP_BACKEND_PORT}"
    networks:
      - ${NETWORK_PUBLIC_NAME}
      - ${NETWORK_PRIVATE_NAME}
    labels:
      # HTTPS router (main traffic)
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localtest.me`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.services.backend.loadbalancer.server.port=${MINIAPP_BACKEND_PORT}"
      - "traefik.docker.network=miniapp_public"
      # middleware (Docker provider)
      - "traefik.http.routers.backend-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
       # HTTP router
      - "traefik.http.routers.backend-http.rule=Host(`api.localtest.me`)"
      - "traefik.http.routers.backend-http.entrypoints=web"
    

  pgadmin:
    image: "dpage/pgadmin4:9.4"
    container_name: miniapp_pgadmin
    depends_on:
      - postgres
    env_file:
      - .env.dev
    environment:
      PGADMIN_DEFAULT_EMAIL: ${MINIAPP_PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${MINIAPP_PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${MINIAPP_PGADMIN_PORT}:80"
    volumes:
      - ${MINIAPP_PGADMIN_DATA_VOLUME}:/var/lib/pgadmin
      - ./pgadmin/pg_service.conf:/home/pgadmin/.pg_service.conf:ro
    networks:
      - ${NETWORK_PRIVATE_NAME}
    deploy:
      resources:
        limits:
          memory: 256M

volumes:
  pgadmin_data:
  pgdata:

networks:
  miniapp_public:
    driver: bridge
    name: ${NETWORK_PUBLIC_NAME}
    ipam:
      config:
        - subnet: ${NETWORK_PUBLIC_SUBNET}
          gateway: ${NETWORK_PUBLIC_GATEWAY}

  miniapp_private:
    driver: bridge
    name: ${NETWORK_PRIVATE_NAME}
    ipam:
      config:
        - subnet: ${NETWORK_PRIVATE_SUBNET}
          gateway: ${NETWORK_PRIVATE_GATEWAY}
